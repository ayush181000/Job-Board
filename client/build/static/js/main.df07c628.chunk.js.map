{"version":3,"sources":["auth.js","JobList.js","requests.js","CompanyDetail.js","LoginForm.js","JobBoard.js","JobDetail.js","JobForm.js","NavBar.js","App.js","index.js"],"names":["accessTokenKey","email","password","fetch","method","headers","body","JSON","stringify","response","ok","json","token","localStorage","setItem","isLoggedIn","getItem","JobList","jobs","this","props","className","map","renderJob","bind","job","title","company","name","to","id","Component","authLink","ApolloLink","operation","forward","setContext","authorization","client","ApolloClient","link","from","HttpLink","uri","cache","InMemoryCache","jobDetailFragment","gql","createJobMutation","companyQuery","jobQuery","jobsQuery","input","mutate","mutation","variables","update","data","writeQuery","query","loadCompany","companyId","loadJob","jobId","loadJobs","fetchPolicy","CompanyDetail","state","match","params","setState","description","LoginForm","error","event","target","value","preventDefault","login","then","onLogin","type","onChange","handleChange","onClick","handleClick","JobBoard","JobDetail","console","log","JobForm","createJob","history","push","style","height","NavBar","loggedIn","onLogout","App","router","removeItem","ref","handleLogout","exact","path","component","render","handleLogin","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.df07c628.chunk.js","sourcesContent":["// NOTE: this example keeps the access token in LocalStorage just because it's simpler\n// but in a real application you may want to use cookies instead for better security\n\nconst accessTokenKey = 'accessToken';\n\nexport function getAccessToken() {\n  return localStorage.getItem(accessTokenKey);\n}\n\nexport async function login(email, password) {\n  const response = await fetch('http://localhost:9000/login', {\n    method: 'POST',\n    headers: {'content-type': 'application/json'},\n    body: JSON.stringify({email, password})\n  });\n  if (response.ok) {\n    const {token} = await response.json();\n    localStorage.setItem(accessTokenKey, token);\n  }\n  return response.ok;\n}\n\nexport function isLoggedIn() {\n  return !!localStorage.getItem(accessTokenKey);\n}\n\nexport function logout() {\n  localStorage.removeItem(accessTokenKey);\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport class JobList extends Component {\n  render() {\n    const {jobs} = this.props;\n    return (\n      <ul className=\"box\">\n        {jobs.map(this.renderJob.bind(this))}\n      </ul>\n    );\n  }\n\n  renderJob(job) {\n    const title = job.company ? `${job.title} at ${job.company.name}` : job.title;\n    return (\n      <li className=\"media\" key={job.id}>\n        <div className=\"media-content\">\n          <Link to={`/jobs/${job.id}`}>{title}</Link>\n        </div>\n      </li>\n    );\n  }\n}\n","import { getAccessToken, isLoggedIn } from './auth';\r\nimport gql from 'graphql-tag';\r\nimport {\r\n  ApolloClient,\r\n  ApolloLink,\r\n  HttpLink,\r\n  InMemoryCache,\r\n} from 'apollo-boost';\r\n\r\nconst endpointURL = 'http://localhost:9000/graphql';\r\n\r\nconst authLink = new ApolloLink((operation, forward) => {\r\n  if (isLoggedIn()) {\r\n    operation.setContext({\r\n      headers: { authorization: 'Bearer ' + getAccessToken() },\r\n    });\r\n  }\r\n\r\n  return forward(operation);\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: ApolloLink.from([authLink, new HttpLink({ uri: endpointURL })]),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nconst jobDetailFragment = gql`\r\n  fragment JobDetail on Job {\r\n    id\r\n    title\r\n    company {\r\n      id\r\n      name\r\n    }\r\n    description\r\n  }\r\n`;\r\n\r\nconst createJobMutation = gql`\r\n  mutation CreateJob($input: CreateJobInput) {\r\n    job: createJob(input: $input) {\r\n      ...JobDetail\r\n    }\r\n  }\r\n  ${jobDetailFragment}\r\n`;\r\n\r\nconst companyQuery = gql`\r\n  query CompanyQuery($id: ID!) {\r\n    company(id: $id) {\r\n      id\r\n      name\r\n      description\r\n      jobs {\r\n        id\r\n        title\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst jobQuery = gql`\r\n  query JobQuery($id: ID!) {\r\n    job(id: $id) {\r\n      ...JobDetail\r\n    }\r\n  }\r\n  ${jobDetailFragment}\r\n`;\r\n\r\nconst jobsQuery = gql`\r\n  query JobsQuery {\r\n    jobs {\r\n      id\r\n      title\r\n      company {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport async function createJob(input) {\r\n  const {\r\n    data: { job },\r\n  } = await client.mutate({\r\n    mutation: createJobMutation,\r\n    variables: { input },\r\n    update: (cache, { data }) => {\r\n      cache.writeQuery({\r\n        query: jobQuery,\r\n        variables: { id: data.job.id },\r\n        data: data,\r\n      });\r\n    },\r\n  });\r\n  return job;\r\n}\r\n\r\nexport async function loadCompany(companyId) {\r\n  const {\r\n    data: { company },\r\n  } = await client.query({ query: companyQuery, variables: { id: companyId } });\r\n  return company;\r\n}\r\n\r\nexport async function loadJob(jobId) {\r\n  const {\r\n    data: { job },\r\n  } = await client.query({ query: jobQuery, variables: { id: jobId } });\r\n  return job;\r\n}\r\n\r\nexport async function loadJobs() {\r\n  const { data } = await client.query({\r\n    query: jobsQuery,\r\n    fetchPolicy: 'no-cache',\r\n  });\r\n  return data.jobs;\r\n}\r\n\r\n//   async function graphqlRequest(query, variables = {}) {\r\n//   const request = {\r\n//     method: 'POST',\r\n//     headers: {\r\n//       'content-type': 'application/json',\r\n//     },\r\n//     body: JSON.stringify({ query, variables }),\r\n//   };\r\n\r\n//   if (isLoggedIn()) {\r\n//     request.headers['authorization'] = 'Bearer ' + getAccessToken();\r\n//   }\r\n\r\n//   const response = await fetch(endpointURL, request);\r\n\r\n//   const responseBody = await response.json();\r\n//   if (responseBody.errors) {\r\n//     const message = responseBody.errors\r\n//       .map((error) => error.message)\r\n//       .join('\\n');\r\n//     throw new Error(message);\r\n//   }\r\n//   return responseBody.data;\r\n// }\r\n","import React, { Component } from 'react';\nimport { JobList } from './JobList';\nimport { loadCompany } from './requests';\n// import { companies } from './fake-data';\n\nexport class CompanyDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { company: null };\n  }\n\n  async componentDidMount() {\n    const { companyId } = this.props.match.params;\n    const company = await loadCompany(companyId);\n    this.setState({ company });\n  }\n\n  render() {\n    const { company } = this.state;\n    if (!company) return null;\n    return (\n      <div>\n        <h1 className='title'>{company.name}</h1>\n        <div className='box'>{company.description}</div>\n        <h5 className='title is-5'>Jobs at {company.name}</h5>\n        <JobList jobs={company.jobs}></JobList>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { login } from './auth';\n\nexport class LoginForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {email: '', password: '', error: false};\n  }\n\n  handleChange(event) {\n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n\n  handleClick(event) {\n    event.preventDefault();\n    const {email, password} = this.state;\n    login(email, password).then((ok) => {\n      if (ok) {\n        this.props.onLogin();\n      } else {\n        this.setState({error: true});\n      }\n    });\n  }\n\n  render() {\n    const {email, password, error} = this.state;\n    return (\n      <form>\n        <div className=\"field\">\n          <label className=\"label\">Email</label>\n          <div className=\"control\">\n            <input className=\"input\" type=\"text\" name=\"email\" value={email}\n              onChange={this.handleChange.bind(this)} />\n          </div>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Password</label>\n          <div className=\"control\">\n            <input className=\"input\" type=\"password\" name=\"password\" value={password}\n              onChange={this.handleChange.bind(this)} />\n          </div>\n        </div>\n        <div className=\"field\">\n          <p className=\"help is-danger\">{error && 'Invalid credentials'}</p>\n          <div className=\"control\">\n            <button className=\"button is-link\" onClick={this.handleClick.bind(this)}>Login</button>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { JobList } from './JobList';\nimport { loadJobs } from './requests';\n// const { jobs } = require('./fake-data');\n\nexport class JobBoard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { jobs: [] };\n  }\n\n  async componentDidMount() {\n    const jobs = await loadJobs();\n    this.setState({ jobs });\n  }\n\n  render() {\n    const { jobs } = this.state;\n    return (\n      <div>\n        <h1 className='title'>Job Board</h1>\n        <JobList jobs={jobs} />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { loadJob } from './requests';\n// import { jobs } from './fake-data';\n\nexport class JobDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { job: null };\n  }\n\n  async componentDidMount() {\n    const { jobId } = this.props.match.params;\n    const job = await loadJob(jobId);\n    console.log(job);\n    this.setState({ job });\n  }\n\n  render() {\n    const { job } = this.state;\n    if (!job) {\n      return null;\n    }\n    return (\n      <div>\n        <h1 className='title'>{job.title}</h1>\n        <h2 className='subtitle'>\n          <Link to={`/companies/${job.company.id}`}>{job.company.name}</Link>\n        </h2>\n        <div className='box'>{job.description}</div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { createJob } from './requests';\n\nexport class JobForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { title: '', description: '' };\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  handleClick(event) {\n    event.preventDefault();\n    createJob(this.state).then((job) => {\n      this.props.history.push(`/jobs/${job.id}`);\n    });\n  }\n\n  render() {\n    const { title, description } = this.state;\n    return (\n      <div>\n        <h1 className='title'>New Job</h1>\n        <div className='box'>\n          <form>\n            <div className='field'>\n              <label className='label'>Title</label>\n              <div className='control'>\n                <input\n                  className='input'\n                  type='text'\n                  name='title'\n                  value={title}\n                  onChange={this.handleChange.bind(this)}\n                />\n              </div>\n            </div>\n            <div className='field'>\n              <label className='label'>Description</label>\n              <div className='control'>\n                <textarea\n                  className='input'\n                  style={{ height: '10em' }}\n                  name='description'\n                  value={description}\n                  onChange={this.handleChange.bind(this)}\n                />\n              </div>\n            </div>\n            <div className='field'>\n              <div className='control'>\n                <button\n                  className='button is-link'\n                  onClick={this.handleClick.bind(this)}\n                >\n                  Submit\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport class NavBar extends Component {\n  render() {\n    const { loggedIn, onLogout } = this.props;\n    if (loggedIn) {\n      return (\n        <nav className=\"navbar\">\n          <div className=\"navbar-start\">\n            <Link className=\"navbar-item\" to=\"/\">Home</Link>\n            <Link className=\"navbar-item\" to=\"/jobs/new\">Post Job</Link>\n            {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n            <a className=\"navbar-item\" onClick={onLogout}>Logout</a>\n          </div>\n        </nav>\n      );\n    } else {\n      return (\n        <nav className=\"navbar\">\n          <div className=\"navbar-start\">\n            <Link className=\"navbar-item\" to=\"/\">Home</Link>\n            <Link className=\"navbar-item\" to=\"/login\">Login</Link>\n          </div>\n        </nav>\n      );\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { isLoggedIn, logout } from './auth';\nimport { CompanyDetail } from './CompanyDetail';\nimport { LoginForm } from './LoginForm';\nimport { JobBoard } from './JobBoard';\nimport { JobDetail } from './JobDetail';\nimport { JobForm } from './JobForm';\nimport { NavBar } from './NavBar';\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {loggedIn: isLoggedIn()};\n  }\n\n  handleLogin() {\n    this.setState({loggedIn: true});\n    this.router.history.push('/');\n  }\n\n  handleLogout() {\n    logout();\n    this.setState({loggedIn: false});\n    this.router.history.push('/');\n  }\n\n  render() {\n    const {loggedIn} = this.state;\n    return (\n      <Router ref={(router) => this.router = router}>\n        <div>\n          <NavBar loggedIn={loggedIn} onLogout={this.handleLogout.bind(this)} />\n          <section className=\"section\">\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={JobBoard} />\n                <Route path=\"/companies/:companyId\" component={CompanyDetail} />\n                <Route exact path=\"/jobs/new\" component={JobForm} />\n                <Route path=\"/jobs/:jobId\" component={JobDetail} />\n                <Route exact path=\"/login\" render={() => <LoginForm onLogin={this.handleLogin.bind(this)} />} />\n              </Switch>\n            </div>\n          </section>\n        </div>\n      </Router>\n    );\n  }\n}\n","import 'bulma/css/bulma.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}